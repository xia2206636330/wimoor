<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.amazon.inboundV2.mapper.ShipInboundShipmentItemV2Mapper">
	<resultMap id="BaseResultMap" type="com.wimoor.amazon.inboundV2.pojo.entity.ShipInboundShipmentItem">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="ShipmentId" property="shipmentid" jdbcType="CHAR" />
		<result column="SellerSKU" property="sellersku" jdbcType="CHAR" />
		<result column="inboundplanid" property="inboundplanid" jdbcType="CHAR" />
		<result column="FulfillmentNetworkSKU" property="fulfillmentnetworksku" jdbcType="CHAR" />
		<result column="Quantity" property="quantity" jdbcType="INTEGER" />
		<result column="QuantityShipped" property="quantityshipped" jdbcType="INTEGER" />
		<result column="QuantityReceived" property="quantityreceived" jdbcType="INTEGER" />
		<result column="QuantityInCase" property="quantityincase" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		ShipmentId, SellerSKU, FulfillmentNetworkSKU, Quantity, QuantityShipped,
		QuantityReceived, QuantityInCase,inboundplanid
	</sql>

	 <select id="selectitemList" parameterType="java.lang.String" resultType="com.wimoor.amazon.inbound.pojo.vo.SummaryShipmentVo">
		select max(sm.shipment_confirmation_id) ShipmentId, 
		    max(sm.destination) ShipToAddressID ,
		    max(sm.referenceid) referenceid,
		    max(sm.transtyle) transtyle,
			max(sm.destination) DestinationFulfillmentCenterId, 
			count(si.sku) skucount,
			sum(si.quantity) toquantity,  
			max(sm.name) name,
			sum(dd.weight*si.quantity) readweight, 
			max(dd.weight_units) readunit, 
			max(sm.status) status,
			sum(case when ifnull(dd.length,0)*ifnull(dd.width,0)*ifnull(dd.height,0)/5000 > dd.weight
			         then ifnull(dd.length,0)*ifnull(dd.width,0)*ifnull(dd.height,0)/5000*si.Quantity
			         else dd.weight*si.Quantity end) weight,
			SUM(case when ifnull(m.boxnum,0) > 0 and ifnull(dm2.id,0) > 0
			         then ifnull(ifnull(si.Quantity/m.boxnum,0)*(dm2.length*dm2.width*dm2.height),0)/1000000
			         else ifnull(si.Quantity*(dd.length*dd.width*dd.height),0)/1000000 end) boxvolume,
			max(dd.weight_units) weightunit,
			sum(m.price*si.quantity) itemprice ,
			max(sm.remark) remark,
			max(tc.name) company,
			max(td.channame) channel,
			max(tc.id) companyid,
			max(td.id) channelid
		from t_erp_ship_v2_inboundshipment_item si
		left join t_erp_ship_v2_inboundshipment sm on si.shipmentid=sm.shipmentid
		left join t_erp_ship_v2_inboundplan sp on sp.id=sm.formid
		left join t_erp_ship_inboundtrans ts on ts.shipmentid=sm.shipment_confirmation_id
		left join t_erp_ship_transcompany tc on tc.id=ts.company
		left join t_erp_ship_transdetail td on td.company=ts.company and td.id=ts.channel
		left join t_marketplace mkt on mkt.marketplaceid=sp.marketplaceid
		left join t_amazon_auth auth on auth.groupid=sp.groupid and auth.region=case when mkt.region='UK' then 'EU' ELSE mkt.region end
		left join t_product_info pro on pro.marketplaceid=sp.marketplaceid and pro.sku=si.sku and pro.amazonAuthId=auth.id
		left join t_product_in_opt o on o.pid=pro.id
		left join t_erp_material m on m.sku=ifnull(o.msku,pro.sku) and m.shopid=sp.shopid and m.isDelete=0
		left join t_dimensions dd on dd.id=m.pkgDimensions
		left join t_dimensions dm2 on dm2.id=m.boxDimensions
		where 1=1 
			and sm.shipmentid=#{shipmentid,jdbcType=CHAR}
		group by sm.shipmentid
	</select>
	
    <select id="summaryShipmentItem"  resultType="com.wimoor.amazon.inbound.pojo.vo.ShipInboundShipmenSummarytVo"   parameterType="java.lang.String">
         select max(inbound.shipment_confirmation_id) ShipmentId,
                count(item.sku) skuamount,
                max(plan.auditime) auditime,
				sum(ifnull(item.quantity,0)) sumQuantity,
				max(date_format(plan.createtime, '%Y-%m-%d')) createdate,
				max(w.name) warehouse ,
				max(ag.name) groupname , 
				max(plan.warehouseid) warehouseid,
				max(inbound.shipmentstatus) shipmentstatus,
				max(plan.shopid) shopid,
				max(m.name) country ,
				max(inbound.destination) center,
				max(plan.remark) remark ,
				max(plan.check_inv) checkinv
			from t_erp_ship_v2_inboundshipment_item item
			left join t_erp_ship_v2_inboundshipment inbound on inbound.shipmentid=item.shipmentid
			left join t_erp_ship_v2_inboundplan plan on plan.id=inbound.formid
			left join t_erp_warehouse w on w.id = plan.warehouseid
			left join t_amazon_group ag on ag.id=plan.groupid
			left join t_marketplace m on m.marketplaceId=plan.marketplaceid
			where inbound.shipmentid = #{shipmentid,jdbcType=CHAR}
    </select>
    
    
	<select id="selectByShipmentid" resultType="java.util.Map" parameterType="java.lang.String">
	select distinct 
		    item.id, 
		    s.shipment_confirmation_id shipmentid,
		    s.shipment_confirmation_id ShipmentId,
		    item.sku sellersku,
		    item.sku SellerSKU,
		    item.fnsku fulfillmentnetworksku,
		    item.totaltransfee,
		    item.unittransfee,
		    item.totalcost,
		    item.unitcost,
		 	item.prep_owner,
			item.PrepInstruction,
			item.prep_owner prepowner,
			item.PrepInstruction prepinstruction,
		    item.fnsku FNSKU ,
		    ifnull(p.msku,item.sku) sku,
		    ifnull(p.msku,item.sku) msku,
		    (select  GROUP_CONCAT(c.name) from t_product_category c where c.pid=p.id )  typename,
		    ifnull(item.quantity,0) quantity,
		    ifnull(item.quantity,0) Quantity,
			ifnull(item.quantity,0) quantityshipped,
			ifnull(item.quantity,0) QuantityShipped,
			ifnull(item.received,0) quantityreceived, 
			p.name pname,
			p.id pid,
			plan.marketplaceid marketplaceid,
			ifnull(pt2.location,pt2.url) image,
			m.color mcolor,
			ifnull((select sum(iv2.quantity) 
					from t_erp_inventory iv2 
					where iv2.materialid=m.id
						and iv2.warehouseid=plan.warehouseid
						and iv2.status like 'outbound_%'),0) invquantity_outbound,
			m.id mid,
			m.id materialid,
			item.received,
			item.received quantityreceived,
			item.quantity,
			item.quantity	quantityincase,
			p.asin,
			p.name,
			p.currency,
			m.name ,
		    m.color mcolor,
		    m.issfg, 
		    m.boxnum,
		    d.length boxlength,
            d.width boxwidth,
            d.height boxheight,
            d.weight boxweight,
            case when ifnull(d.width,0) > 0 and ifnull(d.height,0) > 0 and ifnull(d.length,0) > 0
							then  (d.width*d.height*d.length)/1000000 else 0 end boxvolume,
							ifnull(dim.weight,0) weight,
			ifnull(p.infoprice,0) infoprice,
			ifnull(m.price,0) price,
			ifnull(item.quantity,0)*ifnull(m.price,0) totalprice,
            ROUND(ifnull(dim.length,0)*ifnull(dim.width,0)*ifnull(dim.height,0)/ifnull(de.drate,5000.0),2) dimweight,
						    case when ifnull(dim.width,0) > 0 and ifnull(dim.height,0) > 0 and ifnull(dim.length,0) > 0
							then  ROUND(ifnull(ifnull(item.quantity,item.quantity),0)*(dim.width*dim.height*dim.length)/1000000.0,2) 
							else 0 end volume,
		   
		    ifnull(
				            (select sum(iv.quantity) from t_erp_inventory iv 
                              where 
                               iv.materialid=m.id
                               and iv.warehouseid=plan.warehouseid 
                               and iv.`status`='fulfillable'
				             )
			  ,0) invquantity,
			  m.price_wavg
		from t_erp_ship_v2_inboundshipment_item item
		left join t_erp_ship_v2_inboundshipment s on s.shipmentid=item.shipmentid
		left join t_erp_ship_v2_inboundplan plan on plan.id=s.formid
		left join t_erp_ship_inboundtrans tr on tr.shipmentid=s.shipment_confirmation_id
		left join t_erp_ship_transdetail de on de.company=tr.company and de.id=tr.channel
		left join(select 
		            v.sku,
		            v.marketplaceid,
		            auth.groupid,
		            max(vm.currency) currency,
		            max(v.id) id,
		            max(v.asin) asin,
		            max(v.name) name,
		            ifnull(max(opt.msku),max(v.sku)) msku,
		            max(v.image) image,
					max(v.price) infoprice
					from t_product_info v
					left join t_product_in_opt opt on opt.pid = v.id
					left join t_marketplace vm on vm.marketplaceid=v.marketplaceid
					left join t_amazon_auth auth on auth.id=v.amazonAuthId
					left join t_erp_ship_v2_inboundplan p on p.groupid=auth.groupid and p.marketplaceid=v.marketplaceid
					left join t_erp_ship_v2_inboundshipment s on s.formid=p.id
					left join t_erp_ship_v2_inboundshipment_item i on i.shipmentid=s.shipmentid
					where i. ShipmentId =#{shipmentid,jdbcType=CHAR} and i.sku=v.sku 
					group by v.sku,v.marketplaceid,auth.groupid
		) p on p.sku=item.sku and p.marketplaceid=plan.marketplaceid and p.groupid=plan.groupid
		left join t_erp_material m on m.sku = item.msku and plan.shopid=m.shopid and m.isDelete = 0
		left join t_dimensions d on d.id=m.boxDimensions
		left join t_dimensions dim on dim.id=m.pkgDimensions
		left join t_picture pt2 on pt2.id=p.image
		where item.shipmentid = #{shipmentid,jdbcType=CHAR}
		order by item.sku
	</select>
		<update id="updateByInventoryDetail" parameterType="java.lang.String">
	    UPDATE  t_erp_ship_v2_inboundshipment_item i 
        LEFT JOIN t_erp_ship_v2_inboundshipment s ON s.shipmentid=i.shipmentid
		LEFT JOIN (SELECT referenceid,msku,sum(quantity) qty,MAX(byday) byday ,max(m.marketplaceid) marketplaceid
		from t_amz_rpt_inventory_detail d
		left join t_marketplace m on m.market=case when d.country='GB' then 'UK' else d.country end 
		WHERE eventtype='Receipts' 
		and authid=#{authid,jdbcType=CHAR} AND d.byday>DATE_SUB(NOW(), INTERVAL 180 DAY)
		GROUP BY referenceid,msku) v  ON  v.referenceid=s.shipment_confirmation_id AND v.msku=i.sku
		SET i.received=v.qty,i.receiveddate=v.byday
		WHERE v.referenceid=s.shipment_confirmation_id AND v.msku=i.sku
	</update>
</mapper>