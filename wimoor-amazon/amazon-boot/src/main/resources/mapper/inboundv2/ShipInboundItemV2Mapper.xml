<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.amazon.inboundV2.mapper.ShipInboundItemV2Mapper">
	<resultMap id="BaseResultMap" type="com.wimoor.amazon.inboundV2.pojo.entity.ShipInboundItem">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="ShipmentId" property="shipmentid" jdbcType="CHAR" />
		<result column="SellerSKU" property="sellersku" jdbcType="CHAR" />
		<result column="inboundplanid" property="inboundplanid" jdbcType="CHAR" />
		<result column="FulfillmentNetworkSKU" property="fulfillmentnetworksku" jdbcType="CHAR" />
		<result column="Quantity" property="quantity" jdbcType="INTEGER" />
		<result column="QuantityShipped" property="quantityshipped" jdbcType="INTEGER" />
		<result column="QuantityReceived" property="quantityreceived" jdbcType="INTEGER" />
		<result column="QuantityInCase" property="quantityincase" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		ShipmentId, SellerSKU, FulfillmentNetworkSKU, Quantity, QuantityShipped,
		QuantityReceived, QuantityInCase,inboundplanid
	</sql>

	<select id="findMaterielByShipPlanId" resultType="java.util.Map" parameterType="java.lang.String">
		select tb.marketplaceid,tb.amazongroupid,tb.warehouseid,tm.id materialid,pf.sku,opt.msku
		from t_erp_ship_v2_inboundplan tb
		left join t_product_info pf on pf.sku = #{sku,jdbcType=CHAR} and pf.marketplaceid = tb.marketplaceid
		left join t_amazon_auth auth on auth.id=pf.amazonAuthId
		left join t_product_in_opt opt on opt.pid = pf.id
		left join t_erp_material tm on tm.sku = ifnull(opt.msku,pf.sku) and tm.shopid=tb.shopid and tm.isDelete = 0
		where auth.groupid=tb.amazongroupid and tb.id = #{id,jdbcType=CHAR}
	</select>

	<select  id="refreshOutbound" resultType="java.lang.Integer" parameterType="java.lang.String">
			SELECT ifnull(SUM(i.QuantityShipped),0) qty FROM t_erp_ship_v2_inbounditem i
			LEFT JOIN t_erp_ship_v2_inboundshipment s  ON s.ShipmentId=i.ShipmentId
			LEFT JOIN t_erp_ship_v2_inboundplan p ON p.id=s.inboundplanid AND p.id=i.inboundplanid
			WHERE s.`status`&gt;=2 AND s.`status`&lt;=4 AND i.msku=#{msku,jdbcType=CHAR}
			AND p.auditstatus=3
			AND p.shopid= #{shopid,jdbcType=CHAR} AND p.warehouseid=#{warehouseid,jdbcType=CHAR}
	</select>
	

	<select id="selectByInboundplanid" resultType="java.util.Map" parameterType="java.lang.String">
	 SELECT  
			v.SellerSKU,
			v.fulfillmentnetworksku,
			v.sku,
			v.msku,
			v.Quantity,
			v.QuantityShipped,
			v.pname,
				ifnull(pt.location,ifnull(pt2.location,pt2.url)) image,
			v.drate,
			ifnull(v.materialid,m.id) materialid,
			v.QuantityReceived,
			v.QuantityInCase,
			v.warehouseid,
			v.shopid,
			v.groupid,
			v.marketplaceid,
			v.pid,
			v.asin,
			v.name pname,
			m.name name,
				        (select  GROUP_CONCAT(c.name) from t_product_category c where c.pid=v.pid )  typename,
					    m.color mcolor,
					    m.issfg, 
					    m.boxnum,
					    ifnull(v.materialid,m.id) mid,
					 	 ifnull(v.materialid,m.id) materialid,
					    d.length boxlength,
			            d.width boxwidth,
			            d.height boxheight,
			            d.weight boxweight,
			           ifnull((select sum(iv2.quantity) 
								from t_erp_inventory iv2 
								where iv2.materialid=m.id
									and iv2.warehouseid=v.warehouseid
									and iv2.status like 'outbound_%'),0) invquantity_outbound,
			            case when ifnull(d.width,0) > 0 and ifnull(d.height,0) > 0 and ifnull(d.length,0) > 0
										then  (d.width*d.height*d.length)/1000000 else 0 end boxvolume,
										ifnull(dim.weight,0) weight,
			            ifnull(ifnull(v.QuantityShipped,v.Quantity),0)*ifnull(m.price,0) price,
			            ROUND(ifnull(dim.length,0)*ifnull(dim.width,0)*ifnull(dim.height,0)/ifnull(v.drate,5000.0),2) dimweight,
									    case when ifnull(dim.width,0) > 0 and ifnull(dim.height,0) > 0 and ifnull(dim.length,0) > 0
										then  ROUND(ifnull(ifnull(v.QuantityShipped,v.Quantity),0)*(dim.width*dim.height*dim.length)/1000000.0,2) 
										else 0 end volume,
					   
					    ifnull(
							            (select sum(iv.quantity) from t_erp_inventory iv 
			                              where 
			                               iv.materialid=ifnull(v.materialid,m.id) 
			                               and iv.warehouseid=v.warehouseid 
			                               and iv.`status`='fulfillable'
							             )
						  ,0) invquantity
						  from (
				select   
					    max(item.SellerSKU) SellerSKU,
					    max(item.FulfillmentNetworkSKU) fulfillmentnetworksku,
					    max(ifnull(p.msku,item.SellerSKU)) sku,
					    ifnull(max(p.msku),max(item.SellerSKU)) msku,
					    sum(ifnull(item.Quantity,0)) Quantity,
						sum(ifnull(ifnull(item.QuantityShipped,item.Quantity),0)) QuantityShipped,
						max(p.name) pname,
						max(p.image) image,
					    max(drate) drate,
				        MAX(item.materialid) materialid,
						sum(item.QuantityReceived) QuantityReceived,
						sum(item.QuantityInCase) QuantityInCase,
						MAX(plan.warehouseid) warehouseid,
						MAX(plan.shopid) shopid,
						MAX(plan.amazongroupid) groupid,
						MAX(plan.marketplaceid) marketplaceid,
					    MAX(p.id) pid,
						max(p.asin) asin,
						max(p.name) name 
					from t_erp_ship_v2_inbounditem item
					left join t_erp_ship_v2_inboundplan plan on plan.id=item.inboundplanid
					left join t_erp_ship_inboundtrans tr on tr.shipmentid=item.shipmentid
					left join t_erp_ship_transdetail de on de.company=tr.company and de.id=tr.channel
					left join(select 
					            v.sku,v.marketplaceid,auth.groupid,
					            max(v.id) id,
					            max(v.asin) asin,
					            max(v.name) name,
					            ifnull(max(opt.msku),max(v.sku)) msku,
					            max(v.image) image
								from t_product_info v
								left join t_product_in_opt opt on opt.pid = v.id
								left join t_amazon_auth auth on auth.id=v.amazonAuthId
								left join t_erp_ship_v2_inboundplan p on p.amazongroupid=auth.groupid and p.marketplaceid=v.marketplaceid
								left join t_erp_ship_v2_inbounditem i on i.inboundplanid=p.id
								where p.id =#{inboundplanid,jdbcType=CHAR} and i.SellerSKU=v.sku 
								group by v.sku,v.marketplaceid,auth.groupid
					  ) p on p.sku=item.SellerSKU and p.marketplaceid=plan.marketplaceid and p.groupid=plan.amazongroupid
					  where item.inboundplanid = #{inboundplanid,jdbcType=CHAR}
					group by  item.SellerSKU
					) v
					left join t_erp_material m on m.sku = v.msku and v.shopid=m.shopid and m.isDelete = 0
					left join t_dimensions d on d.id=m.boxDimensions
					left join t_dimensions dim on dim.id=m.pkgDimensions
					left join t_picture pt on m.image=pt.id
					left join t_picture pt2 on pt2.id=v.image
				 
		  
		 
		
	</select>
    <select id="summaryShipmentItem"  resultType="com.wimoor.amazon.inbound.pojo.vo.ShipInboundShipmenSummarytVo"   parameterType="java.lang.String">
         select max(item.ShipmentId) ShipmentId,
                count(item.SellerSKU) skuamount,
                max(inbound.status2date) auditime,
				sum(ifnull(item.QuantityShipped,0)) sumQuantity,
				max(date_format(plan.createdate, '%Y-%m-%d')) createdate,
				max(w.name) warehouse ,
				max(ag.name) groupname , 
				max(plan.warehouseid) warehouseid,
				max(plan.shopid) shopid,
				max(m.name) country ,
				max(inbound.DestinationFulfillmentCenterId) center,
				max(ifnull(inbound.remark,plan.remark)) remark ,
				max(inbound.check_inv) checkinv
			from t_erp_ship_v2_inbounditem item
			left join t_erp_ship_v2_inboundshipment inbound on inbound.ShipmentId=item.ShipmentId
			left join t_erp_ship_v2_inboundplan plan on plan.id=item.inboundplanid
			left join t_erp_warehouse w on w.id = plan.warehouseid
			left join t_amazon_group ag on ag.id=plan.amazongroupid
			left join t_marketplace m on m.marketplaceId=plan.marketplaceid
			where item.ShipmentId = #{shipmentid,jdbcType=CHAR}
    </select>
    

    <select id="summaryShipmentSku"  resultType="java.lang.Integer"   parameterType="java.lang.String">
         select   
            sum(case when 
                      (ifnull(item.QuantityShipped,0)-ifnull(item.QuantityReceived,0))>=0 
                 then ifnull(item.QuantityShipped,0)-ifnull(item.QuantityReceived,0)
                 else 0 end 
            ) quantity
			from t_erp_ship_v2_inbounditem item
			left join t_erp_ship_v2_inboundshipment inbound on inbound.ShipmentId=item.ShipmentId
			left join t_erp_ship_v2_inboundplan plan on plan.id=item.inboundplanid
			left join t_erp_warehouse w on w.id = plan.warehouseid
			left join t_amazon_group ag on ag.id=plan.amazongroupid
			left join t_marketplace m on m.marketplaceId=plan.marketplaceid
			where item.SellerSKU = #{sku,jdbcType=CHAR}
			<if test="marketplaceid=='EU'">
			   and m.region='EU'
			</if>
			<if test="marketplaceid!='EU'">
			   	and plan.marketplaceid= #{marketplaceid,jdbcType=CHAR}
			</if>
			and plan.createdate>ADDDATE(NOW(), INTERVAL -1 year)
			and plan.amazongroupid= #{groupid,jdbcType=CHAR}
			and inbound.status>=2 and inbound.status &lt;6
    </select>
    
	<select id="selectObjByFormid" resultType="com.wimoor.amazon.inboundV2.pojo.vo.ShipInboundItemVo"  parameterType="java.lang.String">
			select   item.id, 
			                item.formid,
			                m.id materialid,
			                item.sku sku,
			                item.sku sellersku,
			                ifnull(item.msku,ifnull(opt.msku,info.sku)) msku,
			                info.fnsku,
			                (select  GROUP_CONCAT(c.name) from t_product_category c where c.pid=info.id )  typename,
			                ifnull(item.quantity,0) quantity,
			                ifnull(item.confirm_quantity,item.quantity) confirmQuantity,
				            m.name,
				            ifnull(pt2.location,pt2.url) image,
				            m.color mcolor,
				            m.issfg, 
				            ifnull(
				            (select sum(iv.quantity) from t_erp_inventory iv 
                              where 
                               iv.materialid=m.id 
                               and iv.warehouseid=plan.warehouseid 
                               and iv.`status`='fulfillable'
				             )
				            ,0) invquantity,
							ifnull(
							( select sum(iv2.quantity) from 
							    t_erp_inventory iv2 where iv2.materialid=m.id
								and iv2.warehouseid=plan.warehouseid and iv2.status like 'outbound_%'
							),0) outbound,
				            info.asin,info.name pname,
				            m.boxnum,
				            d.length boxlength,
				            d.width boxwidth,
				            d.height boxheight,
				            d.weight boxweight,
				            dim.length pkglength,
				            dim.width  pkgwidth,
				            dim.height pkgheight,
				            dim.weight pkgweight,
				            ifnull(ifnull(item.confirm_quantity,item.Quantity),0)*ifnull(m.price,0) price,
				            od.avgsales,
							case when ifnull(d.width,0) > 0 and ifnull(d.height,0) > 0 and ifnull(d.length,0) > 0
							then  (d.width*d.height*d.length)/1000000 else 0 end boxvolume,
							ifnull(dim.weight,0) weight,
			                ROUND(ifnull(dim.length,0)*ifnull(dim.width,0)*ifnull(dim.height,0)/6000.0,2) dimweight,
						    case when ifnull(dim.width,0) > 0 and ifnull(dim.height,0) > 0 and ifnull(dim.length,0) > 0
							then  ROUND(ifnull(ifnull(item.confirm_quantity,item.Quantity),0)*(dim.width*dim.height*dim.length)/1000000.0,2) 
							else 0 end volume,
							(dim.width*dim.height*dim.length)/1000000.0 skuvolume,
							item.label_owner labelOwner,
							item.prep_owner  prepOwner,
							item.expiration  expiration,
							item.manufacturing_lot_code manufacturingLotCode
			from t_erp_ship_v2_inbounditem item
			left join t_erp_ship_v2_inboundplan plan on plan.id=item.formid
			left join t_product_info info on info.marketplaceid=plan.marketplaceid 
			                                 and info.sku=item.sku 
			                                 and info.amazonauthid=plan.amazonauthid
			left join t_product_in_opt opt on opt.pid=info.id
			left join t_product_in_order od on od.pid=info.id
			left join t_erp_material m on m.sku =ifnull(item.msku,ifnull(opt.msku,info.sku)) and plan.shopid=m.shopid and m.isDelete = 0
			left join t_dimensions d on d.id=m.boxDimensions
			left join t_dimensions dim on dim.id=m.pkgDimensions
			left join t_picture pt2 on pt2.id=info.image
			where plan.id= #{formid,jdbcType=CHAR}
			order by item.sku asc
	</select>

<select id="selectObjByShipmentsid" resultType="com.wimoor.amazon.inboundV2.pojo.vo.ShipInboundItemVo"  parameterType="java.util.List">
			select          m.name ,
			                d.length boxlength,
				            d.width  boxwidth,
				            d.height boxheight,
				            d.weight boxweight,
				            m.color mcolor,
				            m.boxnum,
				            m.issfg, 
				             ifnull(
				            (select sum(iv.quantity) from t_erp_inventory iv 
                              where  iv.materialid=m.id
                                 and iv.warehouseid=v.warehouseid 
                                 and iv.`status`='fulfillable'
				             )
				            ,0) invquantity,
				            
							ifnull(
							( select sum(iv2.quantity) from   t_erp_inventory iv2 
							    where iv2.materialid=m.id
								  and iv2.warehouseid=v.warehouseid 
								  and iv2.status like 'outbound_%'
							),0) outbound,
							v.*
			from (
					select  
					        GROUP_CONCAT(s.check_inv) id,        
			                max(ifnull(opt.msku,item.SellerSKU)) msku,
			                sum(ifnull(item.Quantity,0)) Quantity,
				            sum(ifnull(ifnull(item.QuantityShipped,item.Quantity),0)) QuantityShipped,
				            sum(ifnull(item.QuantityReceived,0)) QuantityReceived, 
				            max(ifnull(pt2.location,pt2.url)) image,
				            max(item.FulfillmentNetworkSKU) FulfillmentNetworkSKU,
				            max(item.SellerSKU) sellersku,
				            max(item.FulfillmentNetworkSKU) FNSKU ,
				            max(info.asin) asin,
				            max(info.name) pname,
				            max(plan.warehouseid) warehouseid,
							max(item.totaltransfee) totaltransfee,
							max(item.unittransfee) unittransfee,
							max(item.totalcost) totalcost,
							max(item.unitcost) unitcost,
							max(item.PrepOwner) PrepOwner,
							max(item.PrepInstruction) PrepInstruction,
							max(plan.shopid) shopid
					from t_erp_ship_v2_inbounditem item
					left join t_erp_ship_v2_inboundshipment s on s.ShipmentId=item.ShipmentId
					left join t_erp_ship_v2_inboundplan plan on plan.id=item.inboundplanid
					left join t_marketplace mk on mk.marketplaceid =plan.marketplaceid
					left join t_amazon_auth auth on auth.groupid=plan.amazongroupid and auth.aws_region=mk.aws_region
					left join t_product_info info on info.marketplaceid=mk.marketplaceid and info.sku=item.SellerSKU and info.amazonauthid=auth.id
					left join t_picture pt2 on pt2.id=info.image
					left join t_product_in_opt opt on opt.pid=info.id
					left join t_product_in_order od on od.pid=info.id
					left join t_erp_ship_inboundtrans tr on tr.shipmentid=item.shipmentid
					left join t_erp_ship_transdetail de on de.company=tr.company and de.id=tr.channel
					where item.ShipmentId  in (
		                  <foreach collection="list" item="shipmentid" index="field_list" open="" separator="," close="">
					                #{shipmentid,jdbcType=CHAR}
				          </foreach>
				        )
				       group by item.sellersku 
			) v
			left join t_erp_material m on m.sku =v.msku and v.shopid=m.shopid and m.isDelete = 0
			left join t_dimensions d on d.id=m.boxDimensions
			left join t_dimensions dim on dim.id=m.pkgDimensions



	order by v.sellersku asc
	</select>
	 

	<select id="shipArrivalTimeChart" resultType="java.util.Map">
		select sum(ifnull(item.QuantityShipped,0)) sumship, trans.arrivalTime shopdate
		from t_erp_ship_v2_inboundshipment inbound
		left join t_erp_ship_inboundtrans trans on trans.shipmentid=inbound.shipmentid
		left join t_erp_ship_transdetail detail on detail.id = trans.channel
		left join t_erp_ship_status stat on stat.`status`=inbound.ShipmentStatus
		left join t_erp_ship_addressto ad on ad.id=inbound.ShipToAddressID
		left join t_erp_ship_v2_inbounditem item on item.ShipmentId=inbound.ShipmentId
		left join t_erp_ship_v2_inboundplan form on form.id=inbound.inboundplanid
		left join t_marketplace m on m.marketplaceid=form.marketplaceid
		left join t_amazon_group g on g.id=form.amazongroupid
		where trans.arrivalTime &gt; CURDATE()
			and item.SellerSKU=#{sku,jdbcType=CHAR} 
			and form.shopid=#{shopid,jdbcType=CHAR}
			and (m.marketplaceid=#{marketplaceid,jdbcType=CHAR} or m.region=#{marketplaceid,jdbcType=CHAR}) 
			and g.id=#{groupid,jdbcType=CHAR}
		group by trans.arrivalTime
	</select>

	<select id="getshotTime" resultType="java.util.Map">
		select v.psku sku,v.marketplaceId,tsale.presales,w.stocking_cycle,
			v.openDate,v.salesweek, v.salesfifteen, v.salesmonth,v.sales,
			ifnull(ir.afn_fulfillable_quantity,0)+ifnull(rr.reserved_fc_processing,0)+ifnull(rr.reserved_fc_transfers,0) quantity 
		from (
			select p.sku psku,case when m.region='EU' then 'EU' else m.marketplaceId end marketplaceId,
			sum(s.avgsales) sales,sum(s.sales_seven) salesweek, sum(ifnull(s.sales_fifteen,0)) salesfifteen,
				sum(s.sales_month) salesmonth,min(p.openDate) openDate,a.shop_id,a.groupid,p.amazonAuthId
			from t_product_info p
			left join t_product_in_order s on p.id=s.pid
			left join t_marketplace m on m.marketplaceId=p.marketplaceid
			left join t_amazon_auth a on a.id=p.amazonAuthId
		     where a.shop_id=#{shopid,jdbcType=CHAR} and a.groupid = #{groupid,jdbcType=CHAR}
			and (m.marketplaceId = #{marketplaceid,jdbcType=CHAR} or m.region = #{marketplaceid,jdbcType=CHAR})
			and p.sku=#{sku,jdbcType=CHAR}
		    group by p.amazonAuthId,p.sku,case when m.region='EU' then 'EU' else m.marketplaceId end) v 
		left join t_erp_warehouse_fba w on w.shopid=v.shop_id and w.marketplaceid=v.marketplaceId 
		left join t_erp_estimated_sales tsale on tsale.sku=v.psku and tsale.marketplaceid = w.marketplaceid and tsale.groupid=v.groupid and tsale.isInvalid=0
		left join t_inventory_report ir on ir.marketplaceid=w.marketplaceid and ir.amazonAuthId=v.amazonAuthId and ir.sku=v.psku 
		left join t_inventory_reserved_report rr on ir.sku=rr.sku and ir.marketplaceid=rr.marketplaceid and ir.amazonAuthId=rr.amazonAuthId 
	</select>
<select id="shipmentReportByWarhouseCHType" resultType="java.util.Map">
	SELECT * FROM (
	select
	plan.marketplaceid warehouse,
	de.transtype,
	max(mkp.name) marketname,
	max(tt.name) name,
	sum(ifnull(dd.weight,0)*item.quantity) readweight,
	SUM(item.quantity) totalqty,
	sum(case when shipment.`status`=5 or shipment.`status`=6 then item.quantity else 0 end ) totalout,
	sum(case when shipment.`status`=5 or shipment.`status`=6 then item.received else 0 end ) totalrec,
	sum(case when shipment.`status`=5 or shipment.`status`=6 then item.received-item.quantity else 0 end ) lessrec,
	sum(case when shipment.`status`=5 or shipment.`status`=6 then item.quantity*m.price else 0 end ) worth,
	sum(case when shipment.`status` &gt;=2 and shipment.`status`&lt;=5 then item.quantity else 0 end ) needrec,
	sum(case when shipment.`status` &gt;=2 and shipment.`status` &lt;=5 then item.quantity-item.received else 0 end ) needout
	from t_erp_ship_v2_inboundshipment_item item
	left join t_erp_ship_v2_inboundshipment shipment on shipment.ShipmentId=item.ShipmentId
	left join t_erp_ship_v2_inboundplan plan on plan.id=shipment.formid
	left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
	left join t_erp_warehouse w on plan.warehouseid=w.id
	left join t_erp_material m on m.sku=item.sku and plan.shopid=m.shopid and m.isDelete = 0
	left join t_dimensions dd on dd.id=m.pkgDimensions
	left join t_erp_ship_inboundtrans trans on trans.shipmentid=shipment.shipment_confirmation_id
	left join t_erp_ship_transdetail de on de.id=trans.channel
	left join t_erp_ship_transchannel ch on ch.id=de.channel
	left join t_erp_transtype tt on tt.id=de.transtype
	left join t_erp_ship_transcompany com on com.id=de.company
	where plan.shopid=#{param.shopid,jdbcType=CHAR}
	and shipment.status&gt;=5
	and com.`name` is not null
	<if test="param.datetype=='createdate'">
		and plan.createtime &gt;=#{param.fromDate,jdbcType=DATE}
		and plan.createtime &lt;=#{param.endDate,jdbcType=DATE}
	</if>
	<if test="param.datetype=='deliverydate'">
		and shipment.shiped_date &gt;=#{param.fromDate,jdbcType=DATE}
		and shipment.shiped_date &lt;=#{param.endDate,jdbcType=DATE}
	</if>
	<if test="param.warehouseid!=null">
		and w.id=#{param.warehouseid,jdbcType=CHAR}
	</if>
	<if test="param.companyid!=null">
		and de.company =#{param.companyid,jdbcType=CHAR}
	</if>
	<if test="param.channelid!=null">
		and trans.channel=#{param.channelid,jdbcType=CHAR}
	</if>
	<if test="param.search!=null">
		and item.sku  like #{param.search,jdbcType=CHAR}
	</if>
	<if test="param.groupid!=null">
		and plan.groupid=#{param.groupid,jdbcType=CHAR}
	</if>
	<if test="param.marketplaceid!=null">
		and plan.marketplaceid=#{param.marketplaceid,jdbcType=CHAR}
	</if>


	group by plan.marketplaceid,de.transtype
	) v
	left join (
	select
	plan.marketplaceid warehouse,
	de.transtype,
	sum(case when trans.wunit='kg' then trans.transweight else 0 end) transweight_kg,
	sum(case when trans.wunit='cbm' then trans.transweight else 0 end) transweight_cbm,
	sum(ifnull(trans.singleprice,0)*ifnull(trans.transweight,0)+ifnull(trans.otherfee,0)) shipfee,
	sum( boxv.boxnum) totalbox,
	ROUND(avg(ifnull(datediff(shipment.start_receive_date, shipment.shiped_date),0)),2) avgtime,
	count(if(shipment.status='-1',true,null )) problem
	FROM t_erp_ship_v2_inboundshipment shipment
	left join t_erp_ship_v2_inboundplan plan on plan.id=shipment.formid
	left join ( select box.shipmentid,count(box.id) boxnum from t_erp_ship_v2_inboundshipment_box box group by box.shipmentid) boxv on boxv.shipmentid=shipment.shipmentid
	left join t_marketplace mkp on mkp.marketplaceid=plan.marketplaceid
	left join t_erp_warehouse w on plan.warehouseid=w.id
	left join t_erp_ship_inboundtrans trans on trans.shipmentid=shipment.shipment_confirmation_id
	left join t_erp_ship_transdetail de on de.id=trans.channel
	left join t_erp_ship_transcompany com on com.id=de.company
	where plan.shopid=#{param.shopid,jdbcType=CHAR}
	and (shipment.status&gt;=5 or shipment.start_receive_date is not null)
	and com.`name` is not null
	<if test="param.datetype=='createdate'">
		and plan.createtime &gt;=#{param.fromDate,jdbcType=DATE}
		and plan.createtime &lt;=#{param.endDate,jdbcType=DATE}
	</if>
	<if test="param.datetype=='deliverydate'">
		and  shipment.shiped_date  &gt;=#{param.fromDate,jdbcType=DATE}
		and   shipment.shiped_date &lt;=#{param.endDate,jdbcType=DATE}
	</if>
	<if test="param.warehouseid!=null">
		and w.id=#{param.warehouseid,jdbcType=CHAR}
	</if>
	<if test="param.companyid!=null">
		and de.company =#{param.companyid,jdbcType=CHAR}
	</if>
	<if test="param.channelid!=null">
		and trans.channel=#{param.channelid,jdbcType=CHAR}
	</if>
	<if test="param.groupid!=null">
		and plan.groupid=#{param.groupid,jdbcType=CHAR}
	</if>
	<if test="param.marketplaceid!=null">
		and plan.marketplaceid=#{param.marketplaceid,jdbcType=CHAR}
	</if>
	group by plan.marketplaceid,de.transtype
	) n on v.transtype=n.transtype    and v.warehouse =n.warehouse
	</select>
	
	<select id="shipmentReportByType" resultType="java.util.Map">
		SELECT
		${param.groupby},
		max(gname) gname,
		max(market) market,
		max(company) company,
		max(logitics) logitics,
		max(channame)  channame,
		max(subarea)   subarea,
		max(channelname)  channelname,
		max(transtype) transtype,
		max(warehousename) warehousename,
		SUM(readweight) readweight,
		SUM(totalqty) totalqty,
		SUM(totalout)  totalout,
		SUM(totalrec) totalrec,
		SUM(lessrec) lessrec,
		SUM(worth) worth,
		SUM(needrec) needrec,
		SUM(needout) needout,
		sum(transweight_kg) transweight_kg,
		sum(transweight_cbm) transweight_cbm,
		sum(shipfee) shipfee,
		sum(totalbox) totalbox,
		sum(totalotherfee) totalotherfee,
		count(shipmentid) shipmentnum,
		ROUND(avg(avgtime),2) avgtime,
		SUM(problem) problem

		FROM (
		SELECT

		<if test="param.type=='nosku'">
			max(plan.groupid) groupid,
			max(plan.marketplaceid) marketplaceid,
			max(plan.warehouseid) warehouseid,
			max(de.id ) channeldetailid,
			max(item.sku) sku,
			shipment.shipment_confirmation_id shipmentid,
			shipment.ShipmentId ShipmentId1,
			max(case when mkp.region='EU' then 'FBA-EU' else CONCAT('FBA-',mkp.`market`) end) warehouse,
			max(g.name) gname,
			max(mk.name) market,
			max(de.company) company,
			max(com.`name`) logitics,
			max(de.channame)  channame,
			max(de.subarea)   subarea,
			max(ch.name)  channelname,
			max(tt.name) transtype,
			max(w.name) warehousename,
			sum(ifnull(dd.weight,0)*item.quantity) readweight,
			sum(item.quantity) totalqty,
			sum( item.quantity  )  totalout,
			sum( item.received  )  totalrec,
			sum( item.received-item.quantity  ) lessrec,
			sum( item.quantity*m.price )  worth,
			sum( item.quantity  ) needrec,
			sum( item.quantity-item.received  )  needout
		</if>
		<if test="param.type=='sku'">
			plan.groupid groupid,
			plan.marketplaceid,
			plan.warehouseid,
			de.id channeldetailid,
			item.sku sku,
			shipment.shipment_confirmation_id shipmentid,
			shipment.ShipmentId ShipmentId1,
			case when mkp.region='EU' then 'FBA-EU' else CONCAT('FBA-',mkp.`market`) end warehouse,
			g.name gname,
			mk.name market,
			de.company company,
			com.`name` logitics,
			de.channame  channame,
			de.subarea   subarea,
			ch.name  channelname,
			tt.name transtype,
			w.name warehousename,
			ifnull(dd.weight,0)*item.quantity readweight,
			item.quantity totalqty,
			 item.quantity totalout,
			 item.received totalrec,
			 item.received-item.quantity lessrec,
			 item.quantity*m.price worth,
			 item.quantity needrec,
			 item.quantity-item.received needout
		</if>
		from t_erp_ship_v2_inboundshipment_item item
		left join t_erp_ship_v2_inboundshipment shipment on shipment.ShipmentId=item.ShipmentId
		left join t_erp_ship_v2_inboundplan plan on plan.id=shipment.formid
		left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
		left join t_erp_warehouse w on plan.warehouseid=w.id
		left join t_erp_material m on m.sku=item.sku and plan.shopid=m.shopid and m.isDelete = 0
		left join t_dimensions dd on dd.id=m.pkgDimensions
		left join t_erp_ship_inboundtrans trans on trans.shipmentid=shipment.shipment_confirmation_id
		left join t_erp_ship_transdetail de on de.id=trans.channel
		left join t_erp_ship_transchannel ch on ch.id=de.channel
		left join t_erp_transtype tt on tt.id=de.transtype
		left join t_erp_ship_transcompany com on com.id=de.company
		LEFT JOIN t_amazon_group g ON g.id=plan.groupid
		LEFT JOIN t_marketplace mk ON mk.marketplaceId=plan.marketplaceid
		where plan.shopid=#{param.shopid,jdbcType=CHAR}
		and shipment.status&gt;=5
		<if test="param.datetype=='createdate'">
			and plan.createtime &gt;=#{param.fromDate,jdbcType=DATE}
			and plan.createtime &lt;=#{param.endDate,jdbcType=DATE}
		</if>
		<if test="param.datetype=='deliverydate'">
			and shipment.shiped_date &gt;=#{param.fromDate,jdbcType=DATE}
			and shipment.shiped_date &lt;=#{param.endDate,jdbcType=DATE}
		</if>
		<if test="param.warehouseid!=null">
			and plan.warehouseid=#{param.warehouseid,jdbcType=CHAR}
		</if>
		<if test="param.groupid!=null">
			and plan.groupid=#{param.groupid,jdbcType=CHAR}
		</if>
		<if test="param.marketplaceid!=null">
			and plan.marketplaceid=#{param.marketplaceid,jdbcType=CHAR}
		</if>
		<if test="param.companyid!=null">
			and de.company =#{param.companyid,jdbcType=CHAR}
		</if>
		<if test="param.channelid!=null">
			and trans.channel=#{param.channelid,jdbcType=CHAR}
		</if>
		<if test="param.search!=null">
			and item.sku  like #{param.search,jdbcType=CHAR}
		</if>
		<if test="param.type=='nosku'">
			GROUP BY ShipmentId1
		</if>
		) v
		left join (
		select
		shipment.shipmentid ShipmentId2,
		sum(case when trans.wunit='kg' then trans.transweight else 0 end) transweight_kg,
		sum(case when trans.wunit='cbm' then trans.transweight else 0 end) transweight_cbm,
		sum(ifnull(trans.singleprice,0)*ifnull(trans.transweight,0)+ifnull(trans.otherfee,0)) shipfee,
		sum(trans.otherfee) totalotherfee, count(shipment.shipmentid) shipmentnum,
		sum(
		 (select count(b.id)  from t_erp_ship_v2_inboundshipment_box b
		left join t_erp_ship_v2_inboundshipment sh on sh.shipmentid=b.shipmentid
		where sh.shipment_confirmation_id=shipment.shipment_confirmation_id)
		 ) totalbox,
		max(datediff(shipment.start_receive_date, shipment.shiped_date)) avgtime,
		count(if(shipment.status='-1',true,null )) problem
		FROM t_erp_ship_v2_inboundshipment shipment
		left join t_erp_ship_v2_inboundplan plan on plan.id=shipment.formid
		left join t_marketplace mkp on mkp.marketplaceid=plan.marketplaceid
		left join t_erp_warehouse w on plan.warehouseid=w.id
		left join t_erp_ship_inboundtrans trans on trans.shipmentid=shipment.shipment_confirmation_id
		left join t_erp_ship_transdetail de on de.id=trans.channel
		left join t_erp_ship_transcompany com on com.id=de.company
		where plan.shopid=#{param.shopid,jdbcType=CHAR}
		and (shipment.status&gt;=5 or shipment.start_receive_date is not null)
		<if test="param.datetype=='createdate'">
			and plan.createtime &gt;=#{param.fromDate,jdbcType=DATE}
			and plan.createtime &lt;=#{param.endDate,jdbcType=DATE}
		</if>
		<if test="param.datetype=='deliverydate'">
			and  shipment.shiped_date  &gt;=#{param.fromDate,jdbcType=DATE}
			and   shipment.shiped_date &lt;=#{param.endDate,jdbcType=DATE}
		</if>
		<if test="param.warehouseid!=null">
			and plan.warehouseid=#{param.warehouseid,jdbcType=CHAR}
		</if>
		<if test="param.groupid!=null">
			and plan.groupid=#{param.groupid,jdbcType=CHAR}
		</if>
		<if test="param.marketplaceid!=null">
			and plan.marketplaceid=#{param.marketplaceid,jdbcType=CHAR}
		</if>
		<if test="param.companyid!=null">
			and de.company =#{param.companyid,jdbcType=CHAR}
		</if>
		<if test="param.channelid!=null">
			and trans.channel=#{param.channelid,jdbcType=CHAR}
		</if>
		GROUP BY shipment.ShipmentId
		) n ON v.ShipmentId1 =n.ShipmentId2
		GROUP BY ${param.groupby}
	</select>

	<select id="shipmentReportByTypeTotal" resultType="java.util.Map">
		SELECT * FROM (
		select
		SUM(item.quantity) totalqty,
		sum(item.quantity) totalout,
		sum(item.received ) totalrec,
		sum(item.received-item.quantity) lessrec,
		sum(item.quantity*m.price) worth,
		sum(item.quantity) needrec,
		sum(item.quantity-item.received) needout,
		sum(ifnull(dd.weight,0)*item.quantity) readweight
		from t_erp_ship_v2_inboundshipment_item item
		left join t_erp_ship_v2_inboundshipment shipment on shipment.ShipmentId=item.ShipmentId
		left join t_erp_ship_v2_inboundplan plan on plan.id=shipment.formid
		left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
		left join t_erp_warehouse w on plan.warehouseid=w.id
		left join t_erp_material m on m.sku=item.sku and plan.shopid=m.shopid and m.isDelete = 0
		left join t_dimensions dd on dd.id=m.pkgDimensions
		left join t_erp_ship_inboundtrans trans on trans.shipmentid=item.ShipmentId
		left join t_erp_ship_transdetail de on de.id=trans.channel
		left join t_erp_ship_transcompany com on com.id=de.company
		where plan.shopid=#{shopid,jdbcType=CHAR}
		and shipment.status&gt;=5
		<if test="datetype=='createdate'">
			and  plan.createtime &gt;=#{fromDate,jdbcType=DATE}
			and  plan.createtime &lt;=#{endDate,jdbcType=DATE}
		</if>
		<if test="datetype=='deliverydate'">
			and  shipment.shiped_date &gt;=#{fromDate,jdbcType=DATE}
			and  shipment.shiped_date &lt;=#{endDate,jdbcType=DATE}
		</if>
		<if test="warehouseid!=null">
			and plan.warehouseid=#{warehouseid,jdbcType=CHAR}
		</if>
		<if test="groupid!=null">
			and plan.groupid=#{groupid,jdbcType=CHAR}
		</if>
		<if test="marketplaceid!=null">
			and plan.marketplaceid=#{marketplaceid,jdbcType=CHAR}
		</if>
		<if test="companyid!=null">
			and de.company =#{companyid,jdbcType=CHAR}
		</if>
		<if test="channelid!=null">
			and trans.channel=#{channelid,jdbcType=CHAR}
		</if>
		<if test="search!=null">
			and item.sku  like #{search,jdbcType=CHAR}
		</if>
		) v
		<if test="type!='sku'">
			join (
			select sum(case when trans.wunit='kg' then trans.transweight else 0 end) transweight_kg,
			sum(case when trans.wunit='cbm' then trans.transweight else 0 end) transweight_cbm,
			sum(ifnull(trans.singleprice,0)*ifnull(trans.transweight,0)+ifnull(trans.otherfee,0)) shipfee,
			sum(trans.otherfee) totalotherfee,
			sum( boxv.boxnum) totalbox,
			count(shipment.shipmentid) shipmentnum,
			ROUND(avg(ifnull(datediff(shipment.start_receive_date, shipment.shiped_date),0)),2) avgtime,
			count(if(shipment.status='-1',true,null )) problem
			FROM t_erp_ship_v2_inboundshipment shipment
			left join t_erp_ship_v2_inboundplan plan on plan.id=shipment.formid
			left join ( select box.shipmentid,count(box.id) boxnum from t_erp_ship_v2_inboundshipment_box box group by box.shipmentid) boxv on boxv.shipmentid=shipment.shipmentid
			left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
			left join t_erp_warehouse w on plan.warehouseid=w.id
			left join t_erp_ship_inboundtrans trans on trans.shipmentid=shipment.shipment_confirmation_id
			left join t_erp_ship_transdetail de on de.id=trans.channel
			left join t_erp_ship_transcompany com on com.id=de.company
			where plan.shopid=#{shopid,jdbcType=CHAR}
			and (shipment.status&gt;=5 or shipment.start_receive_date is not null)
			<if test="datetype=='createdate'">
				and  plan.createtime &gt;=#{fromDate,jdbcType=DATE}
				and  plan.createtime &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="datetype=='deliverydate'">
				and  shipment.shiped_date &gt;=#{fromDate,jdbcType=DATE}
				and  shipment.shiped_date &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="warehouseid!=null">
				and plan.warehouseid=#{warehouseid,jdbcType=CHAR}
			</if>
			<if test="groupid!=null">
				and plan.groupid=#{groupid,jdbcType=CHAR}
			</if>
			<if test="marketplaceid!=null">
				and plan.marketplaceid=#{marketplaceid,jdbcType=CHAR}
			</if>
			<if test="companyid!=null">
				and de.company =#{companyid,jdbcType=CHAR}
			</if>
			<if test="channelid!=null">
				and trans.channel=#{channelid,jdbcType=CHAR}
			</if>
			) n
		</if>
	</select>
	

    <update id="updateByOrdersFee" parameterType="java.lang.String">
	    UPDATE t_erp_ship_v2_inbounditem i 
		LEFT JOIN (SELECT referenceid,msku,sum(quantity) qty,MAX(byday) byday ,max(m.marketplaceid) marketplaceid
		from t_amz_rpt_orders_fulfilled_shipments_fee d
		
		WHERE  authid=#{authid,jdbcType=CHAR}
		GROUP BY referenceid,msku) v  ON  v.referenceid=i.ShipmentId AND v.msku=i.SellerSKU
		SET i.QuantityReceived=case when i.QuantityReceived &lt; v.qty then v.qty ELSE i.QuantityReceived END ,
		i.ReceivedDate=v.byday,
		i.QuantityReceivedBalance=ifnull(case when i.QuantityReceived &lt; v.qty then v.qty ELSE i.QuantityReceived END,0)-
		ifnull(i.QuantityReceivedSub,0),
		i.marketplaceid=v.marketplaceid,
		i.amazonauthid=#{authid,jdbcType=CHAR}
		WHERE v.referenceid=i.ShipmentId AND v.msku=i.SellerSKU
	</update>
	
	<update id="updateByOrderFee" parameterType="java.util.Map">
	    UPDATE t_erp_ship_v2_inbounditem i 
		LEFT JOIN (SELECT shipmentid,sku,sum(quantity) qty
		from  t_amz_rpt_orders_fulfilled_shipments_fee
		 where amazonauthid= #{amazonauthid,jdbcType=CHAR}
		 and sku= #{sku,jdbcType=CHAR}
		 and marketplaceid=#{marketplaceid,jdbcType=CHAR}
		 and shipment_date>=#{shipmentStartDate,jdbcType=CHAR} 
		 and shipment_date&lt;#{shipmentEndDate,jdbcType=CHAR} 
		GROUP BY shipmentid,sku) v  ON  v.shipmentid=i.ShipmentId AND v.sku=i.SellerSKU
		SET  
		i.QuantityReceivedSub=ifnull(i.QuantityReceivedSub,0)-ifnull(v.qty,0),
		i.QuantityReceivedBalance= i.QuantityReceived -(ifnull(i.QuantityReceivedSub,0)-ifnull(v.qty,0))
		WHERE v.shipmentid=i.ShipmentId AND v.sku=i.SellerSKU
	</update>
	<select id="getShipinboundItemBatchCondition" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT  g.name groupname,m.name marketname,s.status5date shipdate,IFNULL(pt.location,pt.url) image,
		i.SellerSKU sku,f.name ,i.`status`,p.number,s.ShipmentId shipmentid,i.QuantityShipped,i.QuantityReceived,
		st.name shipmentstatus,i.ReceivedDate,i.QuantityReceivedSub,i.unitcost,i.totalcost,i.totaltransfee,i.unittransfee,
		i.opttime,
		i.QuantityReceivedBalance,
		case when i.`status`=1 then '未开始' 
		     when i.`status`=2 then '扣减中'   
		     when i.`status`=3 then '已扣完'  
		     else '未处理' end statusname
		 from t_erp_ship_v2_inbounditem i
		LEFT JOIN t_erp_ship_v2_inboundshipment s ON s.ShipmentId=i.ShipmentId
		LEFT JOIN t_erp_ship_status st ON st.`status`=s.ShipmentStatus
		LEFT JOIN t_marketplace m  ON m.marketplaceId=i.marketplaceid
		LEFT JOIN t_product_info f ON f.sku=i.SellerSKU AND f.marketplaceid=i.marketplaceid AND f.amazonAuthId=i.amazonauthid
		LEFT JOIN t_erp_ship_v2_inboundplan p ON p.id=s.inboundplanid
		LEFT JOIN t_amazon_group g ON g.id=p.amazongroupid
		LEFT JOIN t_picture pt ON pt.id=f.image
		left join t_product_in_opt opt on opt.pid=f.id
		WHERE s.`status`>=5 AND  i.ReceivedDate IS NOT NULL
		AND p.shopid=#{param.shopid,jdbcType=CHAR} 
		<if test="param.groupid!=null">
			AND p.amazongroupid=#{param.groupid,jdbcType=CHAR} 
		</if>
		<if test="param.marketplaceid!=null">
			AND p.marketplaceid=#{param.marketplaceid,jdbcType=CHAR} 
		</if>
		AND i.ReceivedDate>#{param.fromDate,jdbcType=CHAR}
		AND i.ReceivedDate &lt;=#{param.toDate,jdbcType=CHAR}
		<if test="param.search!=null">
			<if test="param.searchtype=='sku'">
				and i.SellerSKU like #{param.search,jdbcType=CHAR}
			</if>
			<if test="param.searchtype=='number'">
				and p.number like #{param.search,jdbcType=CHAR}
			</if>
			<if test="param.searchtype=='shipmentid'">
				and s.ShipmentId like #{param.search,jdbcType=CHAR}
			</if>
		</if>
		<if test="param.status!=null">
			AND i.`status`=#{param.status,jdbcType=CHAR} 
		</if>
		<if test="param.owner!=null">
			AND opt.owner=#{param.owner,jdbcType=CHAR} 
		</if>
	</select>
	<select id="findShipList" parameterType="java.util.Map" resultType="java.util.Map">
		select * from (	SELECT g.name groupname,mk.name marketname,
		       i.sellersku sku,m.name,IFNULL(pt.location,pt.url) image
		       <foreach collection="param.fieldlist" item="fieldmap" index="field_list" open="" separator="" close="">
			               , SUM(case  when DATE_FORMAT(`status5date`, '%Y-%m') =#{fieldmap,jdbcType=CHAR} then i.QuantityShipped ELSE 0 END ) `${fieldmap}`
		       </foreach>
		FROM  t_erp_ship_v2_inbounditem i
		LEFT JOIN t_erp_ship_v2_inboundshipment s ON s.ShipmentId=i.ShipmentId
		LEFT JOIN t_erp_ship_v2_inboundplan p ON p.id=s.inboundplanid
		LEFT JOIN t_product_info f ON f.sku=i.sellersku AND p.marketplaceid=f.marketplaceid AND f.amazonAuthId=i.amazonauthid
		LEFT JOIN t_amazon_group g ON g.id=p.amazongroupid
		LEFT JOIN t_marketplace mk ON mk.marketplaceId=p.marketplaceid
		LEFT JOIN t_erp_material m ON m.id=i.materialid
		LEFT JOIN t_picture pt ON pt.id=f.image
		WHERE p.shopid=#{param.shopid,jdbcType=CHAR} 
		and p.amazongroupid=#{param.groupid,jdbcType=CHAR} 
		AND s.`status`>=5 AND 
		<if test="param.search!=null">
				  and (i.sellersku like #{param.search,jdbcType=CHAR} or m.name like  #{param.search,jdbcType=CHAR} or f.name like #{param.search,jdbcType=CHAR})
		</if>
		s.status5date>=CONCAT (DATE_FORMAT(CONCAT (DATE_FORMAT(DATE_ADD(CURDATE(),INTERVAL -3 MONTH), '%Y-%m'),'-01')  , '%Y-%m'),'-01')   
		AND s.status5date&lt;CONCAT (DATE_FORMAT(DATE_ADD(CURDATE(),INTERVAL 1 MONTH), '%Y-%m'),'-01')  
		GROUP BY p.amazongroupid,p.marketplaceid,i.SellerSKU
       ) v
	</select>
</mapper>