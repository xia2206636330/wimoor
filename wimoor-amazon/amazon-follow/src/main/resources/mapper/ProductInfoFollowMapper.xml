<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wimoor.amazon.follow.mapper.ProductInfoFollowMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow">
        <id column="pid" property="pid" />
        <result column="status_upload" property="statusUpload" />
        <result column="orders_sum" property="ordersSum" />
        <result column="last_order_time" property="lastOrderTime" />
        <result column="createtime" property="createtime" />
        <result column="creator" property="creator" />
        <result column="quantity" property="quantity" />
        <result column="oldprice" property="oldprice" />
        <result column="price" property="price" />
        <result column="assumeprice" property="assumeprice" />
        <result column="lowprice" property="lowprice" />
        <result column="shopprice" property="shopprice" />
        <result column="pricetime" property="pricetime" />
        <result column="delivery_cycle" property="deliveryCycle" />
        <result column="rank" property="rank" />
    </resultMap>
    <select id="findByCondition" resultType="java.util.Map" parameterType="com.wimoor.amazon.follow.pojo.dto.ProductFollowListDTO">
    		select * from (
    		SELECT i.name pname,i.`asin`,i.brand pbrand,i.marketplaceid,g.name gname,i.sku,a.sellerid,
    		m.point_name pointname,opt.fulfillment_availability,
    		ft.name timename,opt.buyprice buyprice,
    		concat('(',TIME_FORMAT(ft.starttime,"%H:%i") ,'-',case when ft.endtime is null then '未设置' else TIME_FORMAT(ft.endtime,"%H:%i") end,')') timerange,
			IFNULL(p.location,p.url) location,u.name creatorname,m.market,m.name marketname,
			(select min(`rank`) `rank` from t_product_rank  where product_id = t.pid 
			and byday &gt;= DATE_FORMAT(DATE_SUB(now(),INTERVAL 7 DAY),'%Y-%m-%d')) `rank`,
			t.*,i.amazonauthid,g.id groupid 
			<if test="param.isshopowner!=null and param.isshopowner!=''">
             ,ifnull((
					 select max(is_buy_box_winner) from t_amz_follow_offerchange 
					 where sellerid=a.sellerid and marketplaceid=i.marketplaceid and asin=i.asin
			   ),0) iswinbox
			</if>
			<if test="param.isshopcart!=null and param.isshopcart!=''">
             ,ifnull((
		         	select max(is_featured_merchant) from t_amz_follow_offerchange 
				    where sellerid=a.sellerid and marketplaceid=i.marketplaceid and asin=i.asin
			),0) isfeaturedmerchant
			</if>
			,(SELECT MAX(opttime) opttime FROM t_amz_product_price_record where pid=t.pid) pricetime
			
			FROM t_amz_v2_product_info_follow t
			left join t_amz_v2_product_info_follow_time ft on ft.id=t.timeid
			LEFT JOIN t_product_info i ON i.id=t.pid
			LEFT JOIN t_amazon_auth a ON a.id=i.amazonAuthId
			LEFT JOIN t_amazon_group g ON g.id=a.groupid
			LEFT JOIN t_picture p ON p.id=i.image
			LEFT JOIN t_product_in_opt opt on opt.pid=t.pid
			left join t_userinfo u on u.id=t.creator
			left join t_marketplace m on m.marketplaceid=i.marketplaceid
			<if test="param.status==17">
			left join t_amz_follow_offerchange c on c.sellerid=a.sellerid and c.asin=i.asin and c.marketplaceid=i.marketplaceid
			</if>
    		where a.shop_id=#{param.shopid,jdbcType=CHAR} and a.disable=0
    		<if test="param.search!=null and param.search!=''">
    			and ((i.sku like #{param.search,jdbcType=CHAR})
    			or (i.asin like #{param.search,jdbcType=CHAR})
    			or (i.brand like #{param.search,jdbcType=CHAR})
    			or (i.name like #{param.search,jdbcType=CHAR}))
    		</if>
    		<if test="param.amazonauthid!=null and param.amazonauthid!=''">
    			and  a.id=#{param.amazonauthid,jdbcType=CHAR}
    		</if>
    		<if test="param.marketplaceid!=null and param.marketplaceid!=''">
    			and  i.marketplaceid=#{param.marketplaceid,jdbcType=CHAR}
    		</if>
    		<if test="param.ownerid!=null and param.ownerid!=''">
    			and  opt.owner=#{param.ownerid,jdbcType=CHAR}
    		</if>
    		<if test="param.toDate!=null and param.toDate!=''">
    			and  t.createtime >= #{param.fromDate,jdbcType=CHAR}
    			and  t.createtime &lt;= #{param.toDate,jdbcType=CHAR}
    		</if>
    		<if test="param.endDate!=null and param.endDate!=''">
    			and  t.last_order_time >= #{param.startDate,jdbcType=CHAR}
    			and  t.last_order_time &lt;= #{param.endDate,jdbcType=CHAR}
    		</if>
    		<if test="param.lowprice!=null and param.lowprice!=''">
    			and  opt.buyprice >=#{param.lowprice,jdbcType=DECIMAL}
    		</if>
    		<if test="param.maxprice!=null and param.maxprice!=''">
    			and  opt.buyprice &lt;=#{param.maxprice,jdbcType=DECIMAL}
    		</if>
    		<if test="param.loworders!=null and param.loworders!=''">
    			and  t.orders_sum >= #{param.loworders,jdbcType=INTEGER}
    		</if>
    		<if test="param.maxorders!=null and param.maxorders!=''">
    			and  t.orders_sum &lt;=#{param.maxorders,jdbcType=INTEGER}
    		</if>
    		<if test="param.followDateId!=null and param.followDateId!=''">
    			and  t.timeid =#{param.followDateId,jdbcType=CHAR}
    		</if>
    		<if test="param.status==2">
    			and  (t.status_upload='NOUPLOAD'  )
    		</if>
    		<if test="param.status==3">
    			and  ( t.status_upload='ISONLINE'  )
    		</if>
    		<if test="param.status==4">
    			and  (t.status_upload='ISUPLOAD' or t.status_upload='ISOFFLINE')
    		</if>
    		
    		<if test="param.status==7">
    			and  t.status_upload='ISDELETE'
    		</if>
    		<if test="param.status==8">
    			and  t.status_upload='DELETEFAIL'
    		</if>
    		<if test="param.status==9">
    			and  (t.status_upload='ONLINEFAIL' or  t.status_upload='UPLOADFAIL')
    		</if>
    		<if test="param.status==10">
    			and  t.status_upload='OFFLINEFAIL' 
    		</if>
    		<if test="param.status==11">
    			and  t.status_upload='NEEDONLINE'
    		</if>
    		<if test="param.status==12">
    			and  t.status_upload='NEEDOFFLINE'
    		</if>
    		 <if test="param.status==13">
    			and  t.status_upload='NEEDDISCOVERABLE'
    		</if>
    		<if test="param.status==14">
    			and  t.status_upload='NEEDDELETE'
    		</if>
    		<if test="param.status==15">
    			and  t.status_price='NEEDPRICE'
    		</if>
    		<if test="param.status==16">
    			and  t.status_price='PRICEFAIL'
    		</if>
    		<if test="param.status==17">
    		    and c.id is null
    		    and t.status_upload='ISONLINE'
    		</if>
    		<if test="param.isoverprice!=null and param.isoverprice!=''">
    			<if test="param.isoverprice==1 or param.isshopowner=='1'">
    			  and  opt.buyprice&lt;=t.assumeprice
    			</if>
    			<if test="param.isoverprice==0 or param.isoverprice=='0'">
    			  and  ifnull(t.assumeprice,0)=0
    			</if>
    		</if>
    		) v where 1=1
    		<if test="param.isshopcart!=null and param.isshopcart!=''">
    			<if test="param.isshopcart==1 or param.isshopcart=='1'">
    			and  v.isfeaturedmerchant=1
    			</if>
    			<if test="param.isshopcart==0 or param.isshopcart=='0'">
    			and  v.isfeaturedmerchant=0
    			</if>
    		</if>
    		
    		<if test="param.isshopowner!=null and param.isshopowner!=''">
    			<if test="param.isshopowner==1 or param.isshopowner=='1'">
    			and  v.iswinbox=1
    			</if>
    			<if test="param.isshopowner==0 or param.isshopowner=='0'">
    			and  v.iswinbox=0
    			</if>
    		</if>
    		
    		
    		
    </select>
    
    <select id="findFollowOfferlist" resultType="java.util.Map" parameterType="java.lang.String">
    	select  t.*,f.positive_feedback_rating rateing,f.feedback_count feedback  
    	from t_amz_follow_offerchange t 
    	left join t_amz_follow_offer f on f.sellerid=t.sellerid and t.marketplaceid=f.marketplaceid
    	where t.asin=#{asin,jdbcType=CHAR}
    	and t.marketplaceid=#{marketplaceid,jdbcType=CHAR}
    	and t.losttime is null
    	order by ifnull(t.listing_price_amount,0)+ifnull(t.shiping_amount,0) asc
    </select>
    
      <select id="findFollowOffers" resultType="java.util.Map" parameterType="java.lang.String">
    	select  t.*,a.sellerid psellerid,f.positive_feedback_rating rateing,f.feedback_count feedback  
    	from t_amz_follow_offerchange t 
    	left join t_product_info i on t.asin=i.asin  and t.marketplaceid=i.marketplaceid
    	left join t_amazon_auth a on a.id=i.amazonAuthId
    	left join t_amz_follow_offer f on f.sellerid=t.sellerid and t.marketplaceid=f.marketplaceid
    	where i.id=#{pid,jdbcType=CHAR} 
    	order by ifnull(t.listing_price_amount,0)+ifnull(t.shiping_amount,0) asc
    </select>
    
    <update id="invalidProduct"  parameterType="java.lang.String">
    	  update  db_wimoor.t_product_info i  set i.invalid=true where i.id=#{id,jdbcType=CHAR};
    </update>
    
    
    <select id="selectstartTimeList" parameterType="java.lang.String" resultType="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow">
    	select f.*,i.amazonauthid from t_amz_v2_product_info_follow f
    	left join t_product_info i on i.id=f.pid
    	 where f.pid in(
	    	SELECT max(t.pid) pid
	    	FROM t_amz_v2_product_info_follow t
			LEFT JOIN t_amz_v2_product_info_follow_time m ON m.id=t.timeid
			left join t_product_info i on i.id=t.pid
			WHERE 1=1
			and (m.starttime >= #{fromtime,jdbcType=CHAR}  
			AND m.starttime&lt;=#{totime,jdbcType=CHAR}
			AND   t.execute_start&lt; #{daytime,jdbcType=CHAR}
			AND t.status_upload='ISOFFLINE' ) or  (t.status_upload='NEEDONLINE' and t.opttime&lt;DATE_SUB(NOW(), INTERVAL 5 minute))
			group by i.amazonauthid
		)
	</select>
	
	   <select id="selectNoUploadList" parameterType="java.lang.String" resultType="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow">
	   select f.*,i.amazonauthid from t_amz_v2_product_info_follow f
    	left join t_product_info i on i.id=f.pid
    	 where f.pid in(
	    	SELECT max(t.pid) pid
	    	FROM t_amz_v2_product_info_follow t
	    	left join t_product_info i on i.id=t.pid
			WHERE t.status_upload='NOUPLOAD'  and t.opttime&lt;DATE_SUB(NOW(), INTERVAL 5 minute)
			group by i.amazonauthid
		)
	</select>
	
	
	<select id="selectendTimeList" parameterType="java.lang.String" resultType="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow">
	    select f.*,i.amazonauthid from t_amz_v2_product_info_follow f
    	left join t_product_info i on i.id=f.pid
    	 where f.pid in(
	    	SELECT max(t.pid) pid
	    	FROM t_amz_v2_product_info_follow t
			LEFT JOIN t_amz_v2_product_info_follow_time m ON m.id=t.timeid
			left join t_product_info i on i.id=t.pid
			WHERE 1=1
			and (m.endtime >= #{fromtime,jdbcType=CHAR}  AND m.endtime&lt;=#{totime,jdbcType=CHAR}
			AND   t.execute_end&lt; #{daytime,jdbcType=CHAR}
			AND t.status_upload='ISONLINE' ) or 
			(( t.status_upload='NEEDDISCOVERABLE' or  t.status_upload='NEEDOFFLINE' ) 
			and t.opttime&lt;DATE_SUB(NOW(), INTERVAL 5 minute))
			group by i.amazonauthid
		)
	</select>
	
	<select id="selectDeleteList" parameterType="java.lang.String" resultType="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow">
	 select f.*,i.amazonauthid from t_amz_v2_product_info_follow f
    	left join t_product_info i on i.id=f.pid
    	where f.pid in(
    	SELECT max(t.pid) pid
    	FROM t_amz_v2_product_info_follow t
		LEFT JOIN t_amz_v2_product_info_follow_time m ON m.id=t.timeid
		left join t_product_info i on i.id=t.pid
		WHERE t.status_upload='NEEDDELETE'
		and t.opttime&lt;DATE_SUB(NOW(), INTERVAL 5 minute)
		group by i.amazonauthid
		)
	</select>
	
	<select id="needInvRefresh" parameterType="java.lang.String" resultType="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow">
	 select f.*,i.amazonauthid from t_amz_v2_product_info_follow f
    	left join t_product_info i on i.id=f.pid
    	where f.pid in(
    	SELECT max(t.pid) pid
    	FROM t_amz_v2_product_info_follow t
		LEFT JOIN t_amz_v2_product_info_follow_time m ON m.id=t.timeid
		left join db_wimoor.t_product_info i on i.id=t.pid
		WHERE t.status_upload='ISONLINE' and i.invalid=0
		and t.opttime&lt;DATE_SUB(NOW(), INTERVAL 5 minute)
		group by i.amazonauthid)
	</select>
	
	<select id="selectPriceList" parameterType="java.lang.String" resultType="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow">
	 select f.*,i.amazonauthid from t_amz_v2_product_info_follow f
    	left join t_product_info i on i.id=f.pid
    	where f.pid in(
    	SELECT max(t.pid) pid
    	FROM t_amz_v2_product_info_follow t
		LEFT JOIN t_amz_v2_product_info_follow_time m ON m.id=t.timeid
		left join t_product_info i on i.id=t.pid
		WHERE t.status_price='NEEDPRICE'
		and t.opttime&lt;DATE_SUB(NOW(), INTERVAL 5 minute)
		group by i.amazonauthid
		)
	</select>
	
	<select id="findRecordList" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT 
	    g.name groupname,m.name marketname,	 i.asin,r.assumeprice,o.buyprice,r.opttime ,
	    case when t.endtime is not null then 
	    concat(t.name,'(',TIME_FORMAT(t.starttime,"%H:%i"),'-',TIME_FORMAT(t.endtime,"%H:%i"),')') 
	    else  concat(t.name,'(',TIME_FORMAT(t.starttime,"%H:%i"),'-未设置)')  end timename,
	     case when r.status_upload='ISONLINE' then '销售' ELSE 
	    case when r.status_upload='ONLINEFAIL' then '销售' else
	    case when r.status_upload='ISUPLOAD' then '发布' ELSE 
		 case when r.status_upload='UPLOADFAIL' then '发布'  else
		 case when r.status_upload='ISOFFLINE' then '停售' ELSE 
		 case when r.status_upload='DELETEFAIL' then '删除'  else
		 case when r.status_upload='ISDELETE' then '删除' ELSE 
		 case when r.status_upload='OFFLINEFAIL' then '停售'  ELSE '' END 
		 END  END   END  END  END  END  END opttype,
		 case when r.status_upload='ISONLINE' then '成功' ELSE 
	    case when r.status_upload='ONLINEFAIL' then '失败' else
	    case when r.status_upload='ISUPLOAD' then '成功' ELSE 
		 case when r.status_upload='UPLOADFAIL' then '失败'  else
		 case when r.status_upload='ISOFFLINE' then '成功' ELSE 
	    case when r.status_upload='DELETEFAIL' then '失败'  else
		 case when r.status_upload='ISDELETE' then '成功' ELSE 
		 case when r.status_upload='OFFLINEFAIL' then '失败'  ELSE '' END 
		 END END  END   END  END   END   END opttypestatus,
		 r.remark
		from t_amz_v2_product_info_follow_record r
		LEFT JOIN t_amz_v2_product_info_follow_time t ON t.id=r.timeid
		LEFT JOIN t_product_info i ON i.id=r.pid
		LEFT JOIN t_product_in_opt o ON o.pid=i.id
		LEFT JOIN t_amazon_auth a ON a.id=i.amazonauthid
		LEFT JOIN t_marketplace m ON m.marketplaceid=i.marketplaceid
		LEFT JOIN t_amazon_group g ON g.id=a.groupid
		where r.pid=#{pid,jdbcType=CHAR}
		<if test="opttype!=null and opttype!=''">
			<if test="opttype=='upload'">
			and ( r.status_upload='ISUPLOAD' or r.status_upload='UPLOADFAIL')
			</if>
			<if test="opttype=='sales'">
			and ( r.status_upload='ISONLINE' or r.status_upload='ONLINEFAIL')
			</if>
			<if test="opttype=='unsales'">
			and ( r.status_upload='ISOFFLINE' or r.status_upload='OFFLINEFAIL')
			</if>
			<if test="opttype=='delete'">
			and ( r.status_upload='ISDELETE' or r.status_upload='DELETEFAIL')
			</if>
		</if>
		ORDER BY opttime DESC LIMIT 100
	</select>
	
	<select id="findWarningList" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT t.*,i.asin,i.name pname,ifnull(c.url,c.location) location,i.brand brand2  
		FROM  t_amz_v2_product_info_follow t
		LEFT JOIN t_product_info i ON i.id=t.pid 
		LEFT JOIN t_amazon_auth a ON a.id=i.amazonAuthId
		LEFT JOIN t_picture c ON c.id=i.image 
		WHERE a.shop_id=#{shopid,jdbcType=CHAR}
		and (  ifnull(t.brand,'#') !=ifnull(i.brand,'#') or 
		       ifnull(i.name,'#')  !=ifnull(t.name,'#') or 
		       ifnull(t.image,'#') !=ifnull(c.url,'#')
		     )
		<if test="authid!=null and authid!=''">
			and a.id=#{authid,jdbcType=CHAR}
		</if>
		<if test="marketplaceid!=null and marketplaceid!=''">
			and i.marketplaceid=#{marketplaceid,jdbcType=CHAR}
		</if>
         order by i.lastupdate desc
	</select>
	 <select id="findWarningNunmber" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(0)  FROM  t_amz_v2_product_info_follow t
		LEFT JOIN t_product_info i ON i.id=t.pid 
		LEFT JOIN t_amazon_auth a ON a.id=i.amazonAuthId
		LEFT JOIN t_picture c ON c.id=i.image 
		where a.shop_id=#{shopid,jdbcType=CHAR}
			and (  ifnull(t.brand,'#') !=ifnull(i.brand,'#') or 
		       ifnull(i.name,'#')  !=ifnull(t.name,'#') or 
		       ifnull(t.image,'#') !=ifnull(c.url,'#')
		     )
	</select>
	
	<select id="findInfo" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT  t.name,t.brand,c.url from t_product_info t
		LEFT JOIN t_picture c ON c.id=t.image
		where t.id=#{pid,jdbcType=CHAR}
	</select>
	
	
	<select id="findProductInfo" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT  t.* 
		from t_product_info t
		LEFT JOIN t_amazon_auth a ON a.id=t.amazonAuthId
		where 1=1
		and a.shop_id=#{shopid,jdbcType=CHAR}
		and t.marketplaceid=#{marketplaceid,jdbcType=CHAR}
		and t.asin=#{asin,jdbcType=CHAR}
	</select>
	<select id="findOrderSummary" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT SUM(case when item_status='Shipped' OR item_status='Pending' then quantity ELSE 0 END ) qty ,MAX(r.purchase_date)  purchase_date FROM t_product_info i
			LEFT JOIN t_marketplace m ON m.marketplaceId=i.marketplaceid
			LEFT JOIN  t_orders_report r ON i.amazonAuthId=r.amazonAuthId AND i.sku=r.sku 
			AND r.sales_channel=m.point_name and r.purchase_date>DATE_ADD(NOW(),INTERVAL -120 day)
			WHERE i.id=#{pid,jdbcType=CHAR}
	</select>
	<select id="findPriceTime" parameterType="java.lang.String" resultType="java.util.Date">
		SELECT MAX(opttime) opttime FROM t_amz_product_price_record WHERE pid=#{pid,jdbcType=CHAR}
	</select>
	<select id="syncProductInfo" resultType="com.wimoor.amazon.follow.pojo.entity.ProductInfoFollow" parameterType="java.lang.String">
		SELECT i.id pid,'ISOFFLINE' status_upload,NULL orders_sum,NULL last_order_time,20 quantity,
		10 lowest_quantity,NULL max_order_quantity,NULL oldprice,i.price price,i.price assumeprice,
		NULL execute_start,NULL execute_end,NULL errormsg,NULL templateid,5 delivery_cycle,NULL timeid,'系统导入' remark
		,#{userid,jdbcType=CHAR} operator,NOW() opttime,#{userid,jdbcType=CHAR} creator,
		i.name name,i.brand brand,p.url image,NOW() createtime from t_product_info i
		LEFT JOIN t_picture p ON p.id=i.image
		left join t_amazon_auth a ON a.id=i.amazonauthid
		WHERE shop_id=#{shopid,jdbcType=CHAR}
	</select>
</mapper>
