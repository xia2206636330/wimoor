/*
 * The Selling Partner API for CustomerFeedback
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * OpenAPI spec version: 2024-06-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.spapi.model.customerfeedback;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The 10 most positive and most negative review topics for all items in a browse node.
 */
@Schema(description = "The 10 most positive and most negative review topics for all items in a browse node.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-08T10:30:47.588079500+08:00[Asia/Shanghai]")

public class BrowseNodeReviewTrends {
  @SerializedName("positiveTopics")
  private List<BrowseNodeReviewTrend> positiveTopics = null;

  @SerializedName("negativeTopics")
  private List<BrowseNodeReviewTrend> negativeTopics = null;

  public BrowseNodeReviewTrends positiveTopics(List<BrowseNodeReviewTrend> positiveTopics) {
    this.positiveTopics = positiveTopics;
    return this;
  }

  public BrowseNodeReviewTrends addPositiveTopicsItem(BrowseNodeReviewTrend positiveTopicsItem) {
    if (this.positiveTopics == null) {
      this.positiveTopics = new ArrayList<BrowseNodeReviewTrend>();
    }
    this.positiveTopics.add(positiveTopicsItem);
    return this;
  }

   /**
   * The trends of the most positive review topics. The percentage of reviews that contain the topic across all products in the requested browse node determine the topic&#x27;s placement in the list. This value is &#x60;null&#x60; if there aren&#x27;t enough positive reviews for the requested browse node.  **Max length:** 10
   * @return positiveTopics
  **/
  @Schema(description = "The trends of the most positive review topics. The percentage of reviews that contain the topic across all products in the requested browse node determine the topic's placement in the list. This value is `null` if there aren't enough positive reviews for the requested browse node.  **Max length:** 10")
  public List<BrowseNodeReviewTrend> getPositiveTopics() {
    return positiveTopics;
  }

  public void setPositiveTopics(List<BrowseNodeReviewTrend> positiveTopics) {
    this.positiveTopics = positiveTopics;
  }

  public BrowseNodeReviewTrends negativeTopics(List<BrowseNodeReviewTrend> negativeTopics) {
    this.negativeTopics = negativeTopics;
    return this;
  }

  public BrowseNodeReviewTrends addNegativeTopicsItem(BrowseNodeReviewTrend negativeTopicsItem) {
    if (this.negativeTopics == null) {
      this.negativeTopics = new ArrayList<BrowseNodeReviewTrend>();
    }
    this.negativeTopics.add(negativeTopicsItem);
    return this;
  }

   /**
   * The trends of the most negative review topics. The percentage of reviews that contain the topic across all products in the requested browse node determine the topic&#x27;s placement in the list. This value is &#x60;null&#x60; if there aren&#x27;t enough positive reviews for the requested browse node.  **Max length:** 10
   * @return negativeTopics
  **/
  @Schema(description = "The trends of the most negative review topics. The percentage of reviews that contain the topic across all products in the requested browse node determine the topic's placement in the list. This value is `null` if there aren't enough positive reviews for the requested browse node.  **Max length:** 10")
  public List<BrowseNodeReviewTrend> getNegativeTopics() {
    return negativeTopics;
  }

  public void setNegativeTopics(List<BrowseNodeReviewTrend> negativeTopics) {
    this.negativeTopics = negativeTopics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrowseNodeReviewTrends browseNodeReviewTrends = (BrowseNodeReviewTrends) o;
    return Objects.equals(this.positiveTopics, browseNodeReviewTrends.positiveTopics) &&
        Objects.equals(this.negativeTopics, browseNodeReviewTrends.negativeTopics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(positiveTopics, negativeTopics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrowseNodeReviewTrends {\n");
    
    sb.append("    positiveTopics: ").append(toIndentedString(positiveTopics)).append("\n");
    sb.append("    negativeTopics: ").append(toIndentedString(negativeTopics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
