/*
 * The Selling Partner API for CustomerFeedback
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * OpenAPI spec version: 2024-06-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.spapi.model.customerfeedback;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The browse node review subtopic.
 */
@Schema(description = "The browse node review subtopic.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-08T10:30:47.588079500+08:00[Asia/Shanghai]")

public class BrowseNodeSubtopic {
  @SerializedName("subtopic")
  private String subtopic = null;

  @SerializedName("metrics")
  private BrowseNodeReviewSubtopicMetrics metrics = null;

  @SerializedName("reviewSnippets")
  private List<String> reviewSnippets = null;

  public BrowseNodeSubtopic subtopic(String subtopic) {
    this.subtopic = subtopic;
    return this;
  }

   /**
   * The name of the browse node review subtopic.
   * @return subtopic
  **/
  @Schema(required = true, description = "The name of the browse node review subtopic.")
  public String getSubtopic() {
    return subtopic;
  }

  public void setSubtopic(String subtopic) {
    this.subtopic = subtopic;
  }

  public BrowseNodeSubtopic metrics(BrowseNodeReviewSubtopicMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @Schema(required = true, description = "")
  public BrowseNodeReviewSubtopicMetrics getMetrics() {
    return metrics;
  }

  public void setMetrics(BrowseNodeReviewSubtopicMetrics metrics) {
    this.metrics = metrics;
  }

  public BrowseNodeSubtopic reviewSnippets(List<String> reviewSnippets) {
    this.reviewSnippets = reviewSnippets;
    return this;
  }

  public BrowseNodeSubtopic addReviewSnippetsItem(String reviewSnippetsItem) {
    if (this.reviewSnippets == null) {
      this.reviewSnippets = new ArrayList<String>();
    }
    this.reviewSnippets.add(reviewSnippetsItem);
    return this;
  }

   /**
   * A list of up to three snippets from reviews that contain the topic. This value is &#x60;null&#x60; if there aren&#x27;t enough review snippets for the subtopic.
   * @return reviewSnippets
  **/
  @Schema(description = "A list of up to three snippets from reviews that contain the topic. This value is `null` if there aren't enough review snippets for the subtopic.")
  public List<String> getReviewSnippets() {
    return reviewSnippets;
  }

  public void setReviewSnippets(List<String> reviewSnippets) {
    this.reviewSnippets = reviewSnippets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrowseNodeSubtopic browseNodeSubtopic = (BrowseNodeSubtopic) o;
    return Objects.equals(this.subtopic, browseNodeSubtopic.subtopic) &&
        Objects.equals(this.metrics, browseNodeSubtopic.metrics) &&
        Objects.equals(this.reviewSnippets, browseNodeSubtopic.reviewSnippets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subtopic, metrics, reviewSnippets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrowseNodeSubtopic {\n");
    
    sb.append("    subtopic: ").append(toIndentedString(subtopic)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    reviewSnippets: ").append(toIndentedString(reviewSnippets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
