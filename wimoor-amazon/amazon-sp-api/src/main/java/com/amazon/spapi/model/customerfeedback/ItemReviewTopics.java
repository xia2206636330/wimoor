/*
 * The Selling Partner API for CustomerFeedback
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * OpenAPI spec version: 2024-06-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.spapi.model.customerfeedback;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The top 10 positive and negative item review topics.
 */
@Schema(description = "The top 10 positive and negative item review topics.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-08T10:30:47.588079500+08:00[Asia/Shanghai]")

public class ItemReviewTopics {
  @SerializedName("positiveTopics")
  private List<ItemReviewTopic> positiveTopics = null;

  @SerializedName("negativeTopics")
  private List<ItemReviewTopic> negativeTopics = null;

  public ItemReviewTopics positiveTopics(List<ItemReviewTopic> positiveTopics) {
    this.positiveTopics = positiveTopics;
    return this;
  }

  public ItemReviewTopics addPositiveTopicsItem(ItemReviewTopic positiveTopicsItem) {
    if (this.positiveTopics == null) {
      this.positiveTopics = new ArrayList<ItemReviewTopic>();
    }
    this.positiveTopics.add(positiveTopicsItem);
    return this;
  }

   /**
   * A list of the most positive review topics. When the &#x60;sortBy&#x60; query parameter is set to &#x60;MENTIONS&#x60;, the number of reviews that mention the topic determines the topic&#x27;s placement in the list. When &#x60;sortBy&#x60; is set to &#x60;STAR_RATING_IMPACT&#x60;, the effect that the topic has on the star rating of the item determines placement in the list. This value is &#x60;null&#x60; if there are not enough positive reviews for the specified ASIN.  **Max length:** 10
   * @return positiveTopics
  **/
  @Schema(description = "A list of the most positive review topics. When the `sortBy` query parameter is set to `MENTIONS`, the number of reviews that mention the topic determines the topic's placement in the list. When `sortBy` is set to `STAR_RATING_IMPACT`, the effect that the topic has on the star rating of the item determines placement in the list. This value is `null` if there are not enough positive reviews for the specified ASIN.  **Max length:** 10")
  public List<ItemReviewTopic> getPositiveTopics() {
    return positiveTopics;
  }

  public void setPositiveTopics(List<ItemReviewTopic> positiveTopics) {
    this.positiveTopics = positiveTopics;
  }

  public ItemReviewTopics negativeTopics(List<ItemReviewTopic> negativeTopics) {
    this.negativeTopics = negativeTopics;
    return this;
  }

  public ItemReviewTopics addNegativeTopicsItem(ItemReviewTopic negativeTopicsItem) {
    if (this.negativeTopics == null) {
      this.negativeTopics = new ArrayList<ItemReviewTopic>();
    }
    this.negativeTopics.add(negativeTopicsItem);
    return this;
  }

   /**
   * A list of the most negative review topics. When the &#x60;sortBy&#x60; query parameter is set to &#x60;MENTIONS&#x60;, the number of reviews that mention the topic determines the topic&#x27;s placement in the list. When &#x60;sortBy&#x60; is set to &#x60;STAR_RATING_IMPACT&#x60;, the effect that the topic has on the star rating of the item determines placement in the list. This value is &#x60;null&#x60; if there are not enough negative reviews for the specified ASIN.  **Max length:** 10
   * @return negativeTopics
  **/
  @Schema(description = "A list of the most negative review topics. When the `sortBy` query parameter is set to `MENTIONS`, the number of reviews that mention the topic determines the topic's placement in the list. When `sortBy` is set to `STAR_RATING_IMPACT`, the effect that the topic has on the star rating of the item determines placement in the list. This value is `null` if there are not enough negative reviews for the specified ASIN.  **Max length:** 10")
  public List<ItemReviewTopic> getNegativeTopics() {
    return negativeTopics;
  }

  public void setNegativeTopics(List<ItemReviewTopic> negativeTopics) {
    this.negativeTopics = negativeTopics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemReviewTopics itemReviewTopics = (ItemReviewTopics) o;
    return Objects.equals(this.positiveTopics, itemReviewTopics.positiveTopics) &&
        Objects.equals(this.negativeTopics, itemReviewTopics.negativeTopics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(positiveTopics, negativeTopics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemReviewTopics {\n");
    
    sb.append("    positiveTopics: ").append(toIndentedString(positiveTopics)).append("\n");
    sb.append("    negativeTopics: ").append(toIndentedString(negativeTopics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
