/*
 * The Selling Partner API for CustomerFeedback
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * OpenAPI spec version: 2024-06-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amazon.spapi.model.customerfeedback;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The browse node review topic.
 */
@Schema(description = "The browse node review topic.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-08T10:30:47.588079500+08:00[Asia/Shanghai]")

public class BrowseNodeReviewTopic {
  @SerializedName("topic")
  private String topic = null;

  @SerializedName("browseNodeMetrics")
  private BrowseNodeReviewTopicMetrics browseNodeMetrics = null;

  @SerializedName("reviewSnippets")
  private List<String> reviewSnippets = null;

  @SerializedName("subtopics")
  private List<BrowseNodeSubtopic> subtopics = null;

  public BrowseNodeReviewTopic topic(String topic) {
    this.topic = topic;
    return this;
  }

   /**
   * The name browse node review topic.
   * @return topic
  **/
  @Schema(required = true, description = "The name browse node review topic.")
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }

  public BrowseNodeReviewTopic browseNodeMetrics(BrowseNodeReviewTopicMetrics browseNodeMetrics) {
    this.browseNodeMetrics = browseNodeMetrics;
    return this;
  }

   /**
   * Get browseNodeMetrics
   * @return browseNodeMetrics
  **/
  @Schema(required = true, description = "")
  public BrowseNodeReviewTopicMetrics getBrowseNodeMetrics() {
    return browseNodeMetrics;
  }

  public void setBrowseNodeMetrics(BrowseNodeReviewTopicMetrics browseNodeMetrics) {
    this.browseNodeMetrics = browseNodeMetrics;
  }

  public BrowseNodeReviewTopic reviewSnippets(List<String> reviewSnippets) {
    this.reviewSnippets = reviewSnippets;
    return this;
  }

  public BrowseNodeReviewTopic addReviewSnippetsItem(String reviewSnippetsItem) {
    if (this.reviewSnippets == null) {
      this.reviewSnippets = new ArrayList<String>();
    }
    this.reviewSnippets.add(reviewSnippetsItem);
    return this;
  }

   /**
   * A list of up to three snippets from reviews that contain the topic. This value is &#x60;null&#x60; if there aren&#x27;t enough review snippets for the topic.
   * @return reviewSnippets
  **/
  @Schema(description = "A list of up to three snippets from reviews that contain the topic. This value is `null` if there aren't enough review snippets for the topic.")
  public List<String> getReviewSnippets() {
    return reviewSnippets;
  }

  public void setReviewSnippets(List<String> reviewSnippets) {
    this.reviewSnippets = reviewSnippets;
  }

  public BrowseNodeReviewTopic subtopics(List<BrowseNodeSubtopic> subtopics) {
    this.subtopics = subtopics;
    return this;
  }

  public BrowseNodeReviewTopic addSubtopicsItem(BrowseNodeSubtopic subtopicsItem) {
    if (this.subtopics == null) {
      this.subtopics = new ArrayList<BrowseNodeSubtopic>();
    }
    this.subtopics.add(subtopicsItem);
    return this;
  }

   /**
   * A list of the five subtopics that occur most frequently. This value is &#x60;null&#x60; if there are no subtopics.
   * @return subtopics
  **/
  @Schema(description = "A list of the five subtopics that occur most frequently. This value is `null` if there are no subtopics.")
  public List<BrowseNodeSubtopic> getSubtopics() {
    return subtopics;
  }

  public void setSubtopics(List<BrowseNodeSubtopic> subtopics) {
    this.subtopics = subtopics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrowseNodeReviewTopic browseNodeReviewTopic = (BrowseNodeReviewTopic) o;
    return Objects.equals(this.topic, browseNodeReviewTopic.topic) &&
        Objects.equals(this.browseNodeMetrics, browseNodeReviewTopic.browseNodeMetrics) &&
        Objects.equals(this.reviewSnippets, browseNodeReviewTopic.reviewSnippets) &&
        Objects.equals(this.subtopics, browseNodeReviewTopic.subtopics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(topic, browseNodeMetrics, reviewSnippets, subtopics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrowseNodeReviewTopic {\n");
    
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    browseNodeMetrics: ").append(toIndentedString(browseNodeMetrics)).append("\n");
    sb.append("    reviewSnippets: ").append(toIndentedString(reviewSnippets)).append("\n");
    sb.append("    subtopics: ").append(toIndentedString(subtopics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
